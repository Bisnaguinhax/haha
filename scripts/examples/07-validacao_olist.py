#!/usr/bin/env python3
# ================================================================================
# VALIDA√á√ÉO DE DADOS - Great Expectations
# ================================================================================
# Este script realiza valida√ß√µes de qualidade no dataset consolidado `dados_consolidados.csv`.
# Ele √© executado independentemente da DAG e simula um check pr√©-carga no Data Mart.
#
# üìå Instru√ß√µes:
# - O caminho do arquivo √© configur√°vel e ser√° setado automaticamente pelo `configure.py`.
# - As regras s√£o simples, mas demonstram como pode definir expectativas formais.
# ================================================================================

import great_expectations as ge
import sys

# Caminho para os dados consolidados (ser√° substitu√≠do pelo configure.py)
caminho_dados = "C:/Users/Camila Turati/ok/data/olist/dados_consolidados.csv"

print(f"üìÇ Carregando dados de: {caminho_dados}...")
try:
    df = ge.read_csv(caminho_dados)
except FileNotFoundError:
    print(f"‚ùå ERRO: Arquivo n√£o encontrado em '{caminho_dados}'.")
    print("   -> Certifique-se de que a DAG 'dag_consolida_dados_olist_v1' foi executada primeiro.")
    sys.exit(1)


# --- Defini√ß√£o das expectativas ---
print("\nüìè Definindo expectativas de qualidade dos dados...")

# Expectativa 1: order_id n√£o deve conter valores nulos (chave prim√°ria)
df.expect_column_values_to_not_be_null(
    "order_id",
    result_format="SUMMARY"
)
print("  ‚úÖ Regra 1: `order_id` n√£o pode ser nulo.")

# Expectativa 2: order_status deve estar entre valores v√°lidos
df.expect_column_values_to_be_in_set(
    "order_status",
    ["delivered", "shipped", "canceled", "invoiced", "processing", "approved", "unavailable"],
    result_format="SUMMARY"
)
print("  ‚úÖ Regra 2: `order_status` deve conter apenas valores reconhecidos.")

# --- Execu√ß√£o das valida√ß√µes ---
print("\n‚öôÔ∏è  Executando valida√ß√£o com base nas regras definidas...")
validation_result = df.validate()

# --- Exibi√ß√£o do resultado ---
print("\nüìä Valida√ß√£o finalizada. Resultado resumido:")
# O Great Expectations j√° tem uma √≥tima representa√ß√£o em string
print(validation_result)

# --- Checagem final: falhas s√£o consideradas erro de execu√ß√£o (exit code != 0) ---
if not validation_result["success"]:
    print("\n‚ùå VALIDA√á√ÉO FALHOU: Uma ou mais regras foram violadas. Reveja os dados.")
    sys.exit(1)
else:
    print("\n‚úÖ VALIDA√á√ÉO APROVADA: Todos os testes passaram com sucesso.")
    sys.exit(0)
